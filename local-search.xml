<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>运行ssos</title>
    <link href="/2022/06/14/ssos_using/"/>
    <url>/2022/06/14/ssos_using/</url>
    
    <content type="html"><![CDATA[<h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p>笔者使用的FITS图像均来自ZTF的Twillight Survey。所挑选的目标天体均属于Atira类小行星。</p><h2 id="简单测试"><a href="#简单测试" class="headerlink" title="简单测试"></a>简单测试</h2><p>首先我在Ubuntu虚拟机上安装了ssos。为了测试ssos能否正常运行，我选用了ZTF对小行星2020 AV2最初观测到的四张FITS图像进行测试。 2020 AV2是目前已知的唯一的Vatira类小行星。它很可能起源于主带,可能将继续作为Vatira在轨道上运转数十万年，之后受金星作用跑出金星轨道以外<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Greenstreet S. Monthly Notices of the Royal Astronomical Society: Letters, 2020 ,493(1): L129–L131.">[1]</span></a></sup>。在解决了最初由于安装环境和初始设置带来的一些问题后，ssos成功给出了两个候选SSOs，其中1个成功与SkyBot查询结果匹配，而这一个正是2020 AV2， 如图(SWarp 以 2020 AV2 为中心裁剪出的图像)：</p><img src="/2022/06/14/ssos_using/2020AV2.jpg" class="" title="SWarp以2020 AV2为中心裁剪出的图像"><p>注:这四张图是从 ssos的inspect功能产生的动图中截屏得到的，ssos 在显示图中的坐标时存在错误，实际上这四幅图每相邻两幅图的中心点赤经变化约 11.6”，赤纬变化约 11.4”，而图中的背景天空明显移动了，坐标轴上的数值却丝毫未变。</p><p>而另一个候选SSOs在不同设置下的结果有时并不相同，且并不能看出相对背景产生明显移动的物体，应当属于程序错误给出的SSOs候选体。</p><p>之后，为了下一步的模拟运行，我在Ubuntu服务器上搭建好环境后重新跑了一遍2020AV2的四张FITS科学图像，程序却意外报错了。错误信息指向了赤经赤纬所在的一个数组，经过排查后发现是由于ssos在运行过程中需要在线查询许多关键数据，而服务器网络使用的是内部校园网，无法访问外部网络，查询结果为空，从而导致出错。</p><h2 id="模拟运行"><a href="#模拟运行" class="headerlink" title="模拟运行"></a>模拟运行</h2><p>为了模拟处理望远镜日常运行的使用场景，这一部分我们将使用ZTF某一天的Twilight Survey得到的全部的科学图像作为输入，然后运行ssos pipeline。<br>我选取了2019年5月14日，因为这一天，Atira小行星2004 JG6被ZTF-TS观测到了<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="Ye Q, et al. The Astronomical Journal, 2020, 159(2): 70.">[2]</span></a></sup>。</p><h3 id="获取图像"><a href="#获取图像" class="headerlink" title="获取图像"></a>获取图像</h3><p>尽管ZTF提供了多种查询和下载途径，却并不能直接打包下载到某一天的某一项巡天的全部数据。<br>在ZTF下载科学数据的网站目录<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://irsa.ipac.caltech.edu/ibe/data/ztf/products/sci/">[3]</span></a></sup>下，<em>年份&#x2F;日期&#x2F;分数日</em><sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="当时的时间除以24小时后得到的小数部分，取值在0到1之间，这里ZTF用了小数点后前六位作为对应观测的文件夹名称。">[4]</span></a></sup>目录下存放着一次观测的数据。linux上的<code>wget -r url</code>命令可以递归地下载某一url目录下的全部文件，但ZTF每天产生的原始图像数据约1TB<sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote"><span class="hint--top hint--rounded" aria-label="Mahlke, M., et al. A&amp;A, 2018, 610: A21.">[5]</span></a></sup>，直接将一天的文件全部递归下载显然是不太合适的做法。虽然我们知道Twilight Survey是在清晨或黄昏时间段运行的，但是要不偏不漏地知道具体某一天的哪几次观测是ZTF-TS项目在运行仍旧是一件不太容易的事。这其中虽然存在日志文件等，但经过查找后发现其中并不包含巡天项目名称这一内容。要想知道某一次观测是否是ZTF-TS的，只能下载FITS图像后查看其header中的’QCOMMENT’一项，如果是，则这一项包含的会是类似’Partnership_Twilight_Winter2018’之类的内容。好在每次观测的FITS图像被分为了64个文件<sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="ZTF有16个CCD相机，每个相机的图像又被分成了4小块">[6]</span></a></sup>，这样我们可以先只下载某目录下的一个FITS图像后查看其header中的QCOMMENT中是否含有’Twilight’字符串，然后再决定是否继续下载该目录下的其他FITS图像。当然，上述步骤依然不适合人工手动操作，因此我写了一个python脚本在Ubuntu服务器上运行，大致流程如下：</p><ol><li><p>解析HTML获取当日每次观测的全部fracday目录。</p></li><li><p>依次进入每个fracday目录执行第3步：</p></li><li><p>循环：使用wget下载链接名称中同时含有”sciimg.fits”和”zr”的文件。<br>下载第一个文件后，检查此FITS文件header的’QCOMMENT’这一项中是否含有字符串”Twilight”。<br>若是，继续循环下载此目录中其他符合上述条件的文件；若否，则将文件移动到另一个目录并退出循环。</p></li></ol><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Created on Tue Mar 15 16:50:55 2022</span><br><span class="hljs-string"></span><br><span class="hljs-string">@author: 4dtree</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> etree<br><span class="hljs-keyword">from</span> astropy.io <span class="hljs-keyword">import</span> fits<br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">The survey initially ran every night from 2018 November 17 to 2019 February 12. </span><br><span class="hljs-string">he cadence was reduced to one run every three nights from 2019 March 30 to June 23. </span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>year=<span class="hljs-string">&quot;2019&quot;</span><br>date=<span class="hljs-string">&quot;0514&quot;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">scan</span>(<span class="hljs-params">url</span>):<br>    r = requests.get(url)<br>    tree = etree.HTML(r.text)<br>    <span class="hljs-keyword">return</span> tree.xpath(<span class="hljs-string">&#x27;//a/@href&#x27;</span>)<br><br><span class="hljs-comment">#这里使用的是linux系统的wget工具下载文件，Windows和MacOS可能需要自行安装wget。</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">wget</span>(<span class="hljs-params">url</span>):<br>    links = scan(url)<br>    check = <span class="hljs-literal">True</span><br>    flag = <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">for</span> imglink <span class="hljs-keyword">in</span> links:<br>        <span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;sciimg.fits&quot;</span> <span class="hljs-keyword">in</span> imglink <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;zr&quot;</span> <span class="hljs-keyword">in</span> imglink):<br>            os.system(<span class="hljs-string">&quot;wget -c -O ts/&#123;&#125; &quot;</span>.<span class="hljs-built_in">format</span>(imglink)+url+imglink)<br>            <span class="hljs-comment">#如果不想安装wget也可以使用windows和MacOS自带的curl -o来下载文件：</span><br>            <span class="hljs-comment">#os.system(&quot;curl -o ts/&#123;&#125; &quot;.format(imglink)+url+imglink)</span><br>            <span class="hljs-comment">#也可以使用python自带的urllib模块下载文件，此处略。</span><br>            <span class="hljs-keyword">if</span>(flag):<br>                hdu = fits.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;ts/&quot;</span>+imglink)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\t&#123;&#125;\n\t[QCOMMENT]=&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(imglink,hdu[<span class="hljs-number">0</span>].header[<span class="hljs-string">&#x27;QCOMMENT&#x27;</span>]))<br>                check = (<span class="hljs-string">&#x27;Twilight&#x27;</span> <span class="hljs-keyword">in</span> hdu[<span class="hljs-number">0</span>].header[<span class="hljs-string">&#x27;QCOMMENT&#x27;</span>])<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\t[checktwilight=&#123;&#125;]\n&quot;</span>.<span class="hljs-built_in">format</span>(check))<br>                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">not</span> check):<br>                    os.system(<span class="hljs-string">&quot;mv ts/&#123;0&#125; other/&#123;0&#125;&quot;</span>.<span class="hljs-built_in">format</span>(imglink))<br>                    <span class="hljs-keyword">break</span><br>                flag = <span class="hljs-literal">False</span><br><br>os.system(<span class="hljs-string">&quot;mkdir ts;mkdir other&quot;</span>)<br>obsdate = <span class="hljs-string">r&quot;https://irsa.ipac.caltech.edu/ibe/data/ztf/products/sci/&#123;&#125;/&#123;&#125;/&quot;</span>.<span class="hljs-built_in">format</span>(year,date)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;PREPARING DOWNLOADING ZTF-TS SCIENCE IMAGES UNDER :\n&#123;&#125;\n&quot;</span>.<span class="hljs-built_in">format</span>(obsdate))<br>obs = scan(obsdate)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Total observation times: &quot;</span>,<span class="hljs-built_in">len</span>(obs),<span class="hljs-string">&quot;\n\n&quot;</span>)<br><br>checktwilight = <span class="hljs-literal">True</span><br><span class="hljs-keyword">for</span> fracday <span class="hljs-keyword">in</span> obs:<br>    wget(obsdate+fracday)<br></code></pre></td></tr></table></figure><p>程序最终下载了68GB的ZTF-TS的数据，以及24GB的来自ZTF的其它项目的数据。事实上，在第3步的循环中，最初我并未限制文件名称中必须包含”zr”字符串。但对下载的文件进行观察后我发现ZTF-TS的FITS图像均包括”zr”字符串，这表示使用的是ZTF的r滤光片进行的观测。随后我在文章中查阅到ZTF-TS的确都是使用r滤光片进行拍摄的<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="Ye Q, et al. The Astronomical Journal, 2020, 159(2): 70.">[2]</span></a></sup>。这样限制后，再回头看那多余的24GB数据，其中有11GB的数据其实是没有必要下载的。当然，其实也可以更取巧一些，比如只检测当天最开始和最后运行的50次观测是否是Twilight Survey的。 但出于谨慎，为了避免产生遗漏，我并没有选择这种做法，</p><p>总而言之，在2019年5月14日当天，ZTF共进行了696次观测，而其中仅有30次观测是属于ZTF-TS的。假如将其中全部的科学图像FITS文件下载，需要约1.6TB，而通过上述python脚本，最终可以只多下载13GB文件用于识别巡天项目名称，就能下载到完整的68GB的ZTF-TS的图像。这些图像共1917张<sup id="fnref:7" class="footnote-ref"><a href="#fn:7" rel="footnote"><span class="hint--top hint--rounded" aria-label="理论上应当是1920张，但有3张ZTF并未提供。">[7]</span></a></sup>，分布在9个场，其中7个场被观测了4次，2个场被观测了1次。</p><h3 id="程序修补"><a href="#程序修补" class="headerlink" title="程序修补"></a>程序修补</h3><p>之前的简单测试中只输入了4张图片，ssos只需要一两分钟即可完成运行，可以想见对于这次的1917张图片，ssos需要大量时间运行。为了避免运行时意外断开与服务器的连接导致程序中断，需要使用linux下的<code>screen</code>或<code>tmux</code>等工具让程序能够后台离线运行。</p><p>可是，程序在运行过程中又意外运行出错了，错误提示信息依旧是SCAMP遇到了问题。于是我输出了ssos pipeline调用系统终端使用SCAMP时的命令，发现SCAMP需要把SExtractor输出的catalog文件名全部作为参数构成一条非常长的命令来执行。我将这条包含了数千个参数的长命令复制下来在终端里运行SCAMP发现并没有问题，再重新运行ssos时，ssos直接读取了我手动运行SCAMP的输出文件，没有报错。而删掉我手动运行SCAMP生成的文件后再次运行ssos又会产生报错。</p><p>以上调试过程表明，程序出错很可能是python使用os.system()命令调用系统终端时，对字符串长度有限制导致的。ssos pipeline的作者可能也没有一次性使用如此多的数据作为输入进行测试。为了解决这一问题，我尝试了下面的方法：</p><ol><li><p>将os.system()替换为其它具有相同功能的函数。</p></li><li><p>先将SExtractor的输出catalog文件名全部存储到一个文件中，再使用linux管道，将该文件的读取结果作为SCMAP的参数。</p></li></ol><p>这两种方法都需要对ssos源代码进行修改。第一种方法经尝试后发现并不可行，因为命令的长度没有变化，而其他几个类似功能的函数同样具有长度限制。<br>而第二种方法将大量参数被间接引用，大大缩短了输入os.system()函数的字符串的长度，经测试能够成功解决ssos半途报错而中止运行的问题。</p><p>这种方法需要先找到自己的ssos的安装位置，我的是在~&#x2F;anaconda3&#x2F;envs&#x2F;ssos&#x2F;lib&#x2F;python3.8&#x2F;site-packages&#x2F;ssos，所以先<code>cd ~/anaconda3/envs/ssos/lib/python3.8/site-packages/ssos</code>，再<code>sudo vim core.py</code>对文本进行编辑。</p><p>找到原来的这段代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Exectue SCAMP</span><br>catalogs = <span class="hljs-string">&quot; &quot;</span>.join(scamp_args[<span class="hljs-string">&quot;files&quot;</span>])<br>cmd = <span class="hljs-string">&quot; &quot;</span>.join([<span class="hljs-string">&quot;scamp&quot;</span>, catalogs, <span class="hljs-string">&quot;-c&quot;</span>, scamp_args[<span class="hljs-string">&quot;config&quot;</span>]])<br><span class="hljs-keyword">for</span> param, value <span class="hljs-keyword">in</span> scamp_args[<span class="hljs-string">&quot;overwrite_params&quot;</span>].items():<br>    cmd += <span class="hljs-string">&quot; &quot;</span>.join([<span class="hljs-string">&quot; -&quot;</span> + param, value])<br>self.log.debug(<span class="hljs-string">&quot;\nExecuting SCAMP command:\n%s\n&quot;</span> % cmd)<br>os.system(cmd)<br>scamp_from_file = <span class="hljs-literal">False</span><br></code></pre></td></tr></table></figure><p>改为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Exectue SCAMP</span><br>catalogs = <span class="hljs-string">&quot; &quot;</span>.join(scamp_args[<span class="hljs-string">&quot;files&quot;</span>])<br>cmd = <span class="hljs-string">&quot; &quot;</span>.join([catalogs, <span class="hljs-string">&quot;-c&quot;</span>, scamp_args[<span class="hljs-string">&quot;config&quot;</span>]])<br><span class="hljs-keyword">for</span> param, value <span class="hljs-keyword">in</span> scamp_args[<span class="hljs-string">&quot;overwrite_params&quot;</span>].items():<br>    cmd += <span class="hljs-string">&quot; &quot;</span>.join([<span class="hljs-string">&quot; -&quot;</span> + param, value])<br>self.log.debug(<span class="hljs-string">&quot;\nExecuting SCAMP command:\n%s\n&quot;</span> % cmd)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;scamp_cmd_tmp.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> scampcmdtmp:<br>    scampcmdtmp.write(cmd)<br>os.system(<span class="hljs-string">&quot;cat scamp_cmd_tmp.txt ; scamp ` cat scamp_cmd_tmp.txt`&quot;</span>)<br>scamp_from_file = <span class="hljs-literal">False</span><br></code></pre></td></tr></table></figure><h3 id="调试分析"><a href="#调试分析" class="headerlink" title="调试分析"></a>调试分析</h3><p>对于上述1917个图片的输入，ssos运行了11个半小时，生成了8GB的数据，最终得到了476个候选SSOs，其中2个被SkyBot成功匹配。分别是越火小行星2001 QS84和主带小行星Angekauffmann。然后，我单独挑出了2004JG6所在的4张FITS图像再次运行ssos，结果并未找到任何候选SSOs。在多次调整ssos的配置，如设置更大的CROSSMATCH_RADIUS、关闭ssos的几乎全部筛选器等之后，同样的4张图输出了9770个候选SSOs，其中37个被SkyBot匹配到。此次被匹配到的包括2004 JG6，但4次探测中只有第二次被匹配到了，且自行速度很小。为此，我在ZTF的图像搜寻网页<sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://irsa.ipac.caltech.edu/applications/ztf/?__action=layout.showDropDown&amp;view=Search">[8]</span></a></sup> 中的”通过太阳系天体名称&#x2F;轨道搜寻”里找到了2019年5月14号当天2004 JG6的图像，如图所示：</p><img src="/2022/06/14/ssos_using/2004JG6.jpg" class="" title="使用ZTF的在线图像搜寻得到的2004JG6当天的图像"><p>从图中我们可以推测，被匹配上的其实是第二张图中的恒星，这也可以解释为什么输出结果中的自行速度很小。而真正的2004 JG6可能由于太过暗弱而没有被SExtractor识别，或者在四次探测中由于第二次没有与那个固定点源分离而使其它几次未被SCAMP当作同一个源。</p><p>对于最初得到的474个未被匹配的候选SSOs，使用ssos的inspect功能查看后基本都看不出任何相对背景有明显移动的光点，甚至连画面的位置都看不出移动。查看工作目录&#x2F;cats&#x2F;ssos.csv文件后，我发现绝大多数候选SSOs的自行(Proper Motion,PM)都只有零点几或个位数，而被匹配到的SSOs的PM数值都高达七八十乃至一百多。<sup id="fnref:9" class="footnote-ref"><a href="#fn:9" rel="footnote"><span class="hint--top hint--rounded" aria-label="本文提到PM时均默认以arcsec&#x2F;h为单位。">[9]</span></a></sup>而对工作目录&#x2F;cats&#x2F;skybot.csv中的数万条查询结果按照PM进行排序后，我发现了以下规律：</p><ol><li><p>【PM&lt;0】只有NEA-Apollo&#x2F;Aten。</p></li><li><p>【0&lt;PM&lt;10】KBO基本只出现在这一范围,Comet,少量 NEA-Apollo&#x2F;Aten。</p></li><li><p>【10&lt;PM&lt;100】两端过渡区群魔乱舞，但总的来说MB是绝对的主力。</p></li><li><p>【100&lt;PM】几乎全是NEA或Mars-Crosser。</p></li></ol><p>由此可以发现，ssos pipeline可能是为了照顾到自行较慢的TNOs而将自行的下限参数PM_LOW设为了0，但对于我们寻找NEOs来说，适当提高PM_LOW的值虽然存在遗漏少量NEA的可能，但由于如此小的PM在ZTF-TS每次运行的短短20分钟内产生不了易于辨认的移动供肉眼检查，所以可以说几乎没有负面影响，而好处则是可以筛去大量影响人工检查的候选体。</p><p>在将PM_LOW设为10之后，我得到了5个SSOs，其中2个是已经被SkyBot成功匹配的，而剩下3个中有两个疑似彗星，PM分别为75。23和96.88，最后一个PM为18.95的则看不出明显相对背景移动的光点。</p><p>此外，在翻阅ssos.csv时，我发现一个奇怪的现象：这476个候选SSOs几乎全部来自704、705、745三个场，零星有两三个与744、780、781场有关，而613、660、661三个场则一条数据也没有。首先想到的是这几个场的观测次数可能不足4次，但实际上只有744、780被观测了1次，其余7个场均被观测了4次。于是我输出了ssos pipeline运行过程中更多的细节，发现SCAMP会把探测到的源分组。而在此之前的全部过程中每个场都执行了相应的SkyBot查询和源探测步骤。SCAMP分组时并不是按照ZTF的场的编号分组的，但具体分组算法并未在SCAMP的文档<sup id="fnref:10" class="footnote-ref"><a href="#fn:10" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://scamp.readthedocs.io/en/latest/">[10]</span></a></sup>中给出。</p><p>考虑到服务器上使用的是旧版本的SCAMP 2.0.4，在征得同意后，我将服务器Ubuntu系统进行了升级，SCAMP也随之更新到了2.10.0版本。在使用相同的输入和配置文件的情况下，我使用新版本AstrOmatic套件运行了ssos pipeline，这次SCAMP分的组的数目与之前旧版本并不相同。而最后运行结果只找到了143个候选SSOs，0个被SkyBot匹配到。而在ssos.csv文件中，705场的数据也没有了。于是我将只把705场的图像作为输入，测试ssos pipeline是否真的无法从中找到候选SSOs。然而程序给出了35个候选SSOs，0个被SkyBot匹配到。然后我更进一步，只选取了2001 QS84和Angekauffmann所在的705场的15号CCD的四次观测，共16张图片作为输入。这次运行结果给出了42个候选SSOs，这反而比整个705场运行后给出的35个候选SSOs还多，而且这次也成功匹配到了2001 QS84和Angekauffmann。也就是说，虽然SCAMP可以将不同视场中的源关联起来，但将每个视场甚至每个CCD的图像分别在ssos中运行反而能给出更好的结果。</p><hr><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://doi.org/10.1093/mnrasl/slaa025">Greenstreet S. Monthly Notices of the Royal Astronomical Society: Letters, 2020 ,493(1): L129–L131.</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://doi.org/10.3847/1538-3881/ab629c">Ye Q, et al. The Astronomical Journal, 2020, 159(2): 70.</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://irsa.ipac.caltech.edu/ibe/data/ztf/products/sci/">https://irsa.ipac.caltech.edu/ibe/data/ztf/products/sci/</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>当时的时间除以24小时后得到的小数部分，取值在0到1之间，这里ZTF用了小数点后前六位作为对应观测的文件夹名称。<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://doi.org/10.1051/0004-6361/201730924">Mahlke, M., et al. A&amp;A, 2018, 610: A21.</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span>ZTF有16个CCD相机，每个相机的图像又被分成了4小块<a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span>理论上应当是1920张，但有3张ZTF并未提供。<a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span><a href="https://irsa.ipac.caltech.edu/applications/ztf/?__action=layout.showDropDown&amp;view=Search">https://irsa.ipac.caltech.edu/applications/ztf/?__action=layout.showDropDown&amp;view=Search</a><a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:9" class="footnote-text"><span>本文提到PM时均默认以arcsec&#x2F;h为单位。<a href="#fnref:9" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:10" class="footnote-text"><span><a href="https://scamp.readthedocs.io/en/latest/">https://scamp.readthedocs.io/en/latest/</a><a href="#fnref:10" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>ssos</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ssos</tag>
      
      <tag>太阳系天体</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ssos简介</title>
    <link href="/2022/06/14/ssos_pipeline/"/>
    <url>/2022/06/14/ssos_pipeline/</url>
    
    <content type="html"><![CDATA[<h1 id="ssos-pipeline"><a href="#ssos-pipeline" class="headerlink" title="ssos pipeline"></a>ssos pipeline</h1><p>ssos是一款命令行程序，使用python3编写，可以从FITS天文图像文件中搜寻从近地天体到柯伊伯带天体的各类太阳系天体。其名称来源于SSOs，即太阳系天体(Solar System Objects)。作者将其源码上传至了github上<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://github.com/maxmahlke/ssos">[1]</span></a></sup>, 提供了在线文档<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://ssos.readthedocs.io/en/latest/">[2]</span></a></sup>以供参阅，并发表了相关论文<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="Mahlke M, et al. Astronomy and Computing, 2019, 28: 100289.">[3]</span></a></sup>。尽管如此，笔者在安装和使用ssos时还是遇到了许多未被提及的问题，本文将对此进行说明。</p><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><h3 id="安装AstrOmatic套件"><a href="#安装AstrOmatic套件" class="headerlink" title="安装AstrOmatic套件"></a>安装AstrOmatic套件</h3><p>ssos并不直接与FITS文件进行交互，而是使用已有的天文软件处理FITS文件。因此需要自行安装以下三个软件。</p><ul><li><p>SExtractor:   FITS图像源提取</p></li><li><p>SCAMP:   校准天体测量和测光</p></li><li><p>SWarp:   FITS图像叠加和重采样</p></li></ul><p>这三个软件都只是AstrOmatic软件套装的一部分，然而AstrOmatic官网<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.astromatic.net">[4]</span></a></sup>上提供的版本很旧，部分链接还存在打不开的情况。最新版本可以在github上AstrOmatic的相关页面<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.astromatic.net">[4]</span></a></sup>找到。对于linux用户，上述软件可以使用软件包管理器进行安装。笔者使用Ubuntu系统的apt包管理器进行了安装。</p><h3 id="安装ssos"><a href="#安装ssos" class="headerlink" title="安装ssos"></a>安装ssos</h3><p>ssos是基于python3的，如果系统中没有python3则需自行安装。最新版本的ssos要求python版本<em>≥</em>3.8。Anaconda包含conda、python以及许多安装好的工具包，可以用来创建和管理多个不同的python环境。ssos则可以使用python3的pip命令安装，笔者使用conda创建了一个名为ssos的环境，然后再将ssos程序安装到了此环境中。ssos主要依赖以下python外部库。</p><ul><li><p>astropy:   天文学研究常用扩展库</p></li><li><p>numpy:   科学计算常用扩展库</p></li><li><p>pandas:   数据分析与处理常用扩展库</p></li><li><p>sbpy:   隶属于astropy的小行星和彗星的扩展库</p></li></ul><p>在使用pip安装外部库时，会自动安装相关的其他python外部库。然而笔者发现自己在使用pip安装ssos时，sbpy并没有像另外几个库一样被自动安装，需要单独使用pip安装。</p><h3 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h3><h4 id="验证AstrOmatc套件的安装"><a href="#验证AstrOmatc套件的安装" class="headerlink" title="验证AstrOmatc套件的安装"></a>验证AstrOmatc套件的安装</h4><p>对于SExtractor、SCAMP和SWarp，只需要在终端输入<code>sex</code>、<code>scamp</code>、<code>swarp</code>就能在终端看到相应的版本号和简介等信息。不过，即便已经成功安装，上述命令仍有可能无法运行。主要可能有以下原因：</p><ol><li><p>程序未被添加至环境变量.</p></li><li><p>命令的名称不同。</p></li></ol><p>对于第一种情况，将相应程序添加至环境变量即可，在此不再赘述。<br>对于第二种情况，需要从安装目录下找到对应的程序名称，根据笔者的经验，有时需要在终端输入<code>source-extractor</code>、<code>sextractor</code>、<code>SWarp</code>等才能正确找到相应的程序。建议可以在终端中使用<code>which scamp</code>或者<code>whereis scamp</code>命令先找到scamp的安装目录。但是，由于ssos软件并未考虑到上述软件安装后的默认程序名称并不一定是sex、scamp和swarp。因此虽然你仍然可以使用自己下载后的程序名称来正常使用上述软件，却不能正常地被ssos调用。以sextractor这一名称为例，笔者尝试了以下三种方法：</p><ol><li><p>使用SHELL的<code>alias</code>命令为”sextractor”设置别名”sex”。</p></li><li><p>修改ssos源码，将调用SExtractor的命令中的”sex”替换为”sextractor”。</p></li><li><p>进入SExtractor程序所在目录后，在终端输入<code>ln -s sextractor sex</code>创建软链接（又称符号连接）。</p></li></ol><p>第一种方法只是为当前登录用户临时设置程序别名，如要每次登录自动设置，需要修改shell的配置文件。但问题在于，设置好后，虽然用户在终端可以正常使用<code>sex</code>来调用SExtractor，但ssos在运行的过程中却并不能成功调用。这时ssos会出错，并提示说catalog文件不存在，SCAMP遇到问题，Full catalog没能被创建。这一出错信息具有一定迷惑性，让人以为是SCAMP导致的，然而实际上这是由于ssos没能运行SExtractor导致的。以上情况是由于用户使用终端与python3调用终端的途径并不相同，需要额外的方法使得ssos能够识别用户使用alias命令设置的程序别名。<br>总之，这种方法并不好用，笔者并不推荐。</p><p>第二种方法实测是可行的。然而随便修改源代码听起来让人并不满意，况且要在众多代码行中找到正确的位置进行修改也并不是一个容易借鉴的经验，而且用户自己使用时并不能使用简短的<code>sex</code>命令，因此笔者也不推荐这种方法。</p><p>第三种方法操作简单，对用户终端和python3的调用均有效，是笔者推荐的方法。</p><h4 id="验证ssos的安装"><a href="#验证ssos的安装" class="headerlink" title="验证ssos的安装"></a>验证ssos的安装</h4><p>而对于ssos，同样只需要在终端输入<code>ssos</code>就能看到版本号和简介等信息。但需要注意的是，这一命令的作用仅仅是打印这几行字符而已。因此，成功在终端上看到这一命令的输出只能说明ssos已被正确添加至环境变量，并不能说明你已经安装和设置好了其它相关的软件和python外部库。如果你没能成功运行这一命令，请检查：</p><ol><li><p>是否正确将ssos添加至环境变量。</p></li><li><p>如果是在conda环境中安装的，在运行ssos时是否已切换至对应的conda环境。</p></li></ol><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>首先创建一个文件夹作为ssos的存放配置文件和输出文件的目录。在该文件夹处打开终端，使用<code>ssos --default</code>命令，将会在该目录下生成：</p><ul><li><p>default.ssos</p></li><li><p>semp&#x2F;</p><ul><li><p>ssos.sex</p></li><li><p>ssos.swarp</p></li><li><p>ssos.scamp</p></li><li><p>ssos.param</p></li><li><p>default.nnw</p></li><li><p>gauss_2.5_5x5.conv</p></li></ul></li></ul><p>其中default.ssos是ssos的配置文件，而semp文件夹下则是ssos调用AstrOmatic系列软件时各个软件的配置。其中ssos.param是SExtractor控制其生成的catalog中包含哪些参数的配置文件，default.nnw是SExtractor的恒星&#x2F;星系分类器的神经网络权值，gauss_2.5_5x5.conv则是源提取时的卷积过滤器。查阅SExtractor软件的默认配置文件可以发现，SExtractor提供了多个经典的卷积模板，而ssos只选取了其中最适合暗弱天体探测的高斯卷积核。</p><p>接下来需要根据选用的FITS文件对上述配置文件进行更改，主要是把一些关键词正确地指向FITS图像的对应数据头，具体需要更改的项可以参考ssos的在线文档相关页面<sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://ssos.readthedocs.io/en/latest/setup.html">[6]</span></a></sup>。除了在线文档上提到的参数外，笔者建议将semp&#x2F;ssos.scamp文件中的ASTREF_CATALOG这一项从默认的GAIA-DR2改为2MASS。这是因为:</p><ol><li><p>如果你的SCAMP版本比较旧，可能并不支持GAIA-DR2查询，从而导致ssos运行时出错。<sup id="fnref:7" class="footnote-ref"><a href="#fn:7" rel="footnote"><span class="hint--top hint--rounded" aria-label="对于Ubuntu系统，需要系统版本大于等于21.04才可以使用apt安装SCAMP  2.10.0(2020-12-01)版本，而小于此系统版本的Ubuntu安装的最高版本是SCAMP  2.0.4(2014-07-09)，这一版本并不支持GAIA-DR2以及ssos.scamp在ASTREF_CATALOG这一项的注释里列出的其它一些选择，如SDSS-R12、PANSTARRS-1等。">[7]</span></a></sup></p></li><li><p>2MASS可以提供全天空的近红外图像，而其它巡天项目可能不包含对应天区的图像从而导致ssos程序出错。因此如果是首次运行，建议先使用2MASS尝试。</p></li></ol><h2 id="程序流程"><a href="#程序流程" class="headerlink" title="程序流程"></a>程序流程</h2><p>配置好文件后，将所用到的FITS图像全部放入某一目录，然后在配置文件所在目录打开终端，执行<code>ssos path/to/images</code>命令,即可运行ssos主程序。程序流程图如图所示：</p><img src="/2022/06/14/ssos_pipeline/ssos-pipeline-flowchart.jpg" class="" title="ssos-pipeline-flowchart"><p>图中虚线框内是ssos程序外部提供的内容：左边一列是需要通过网络在线查询的内容，最上方是待处理的FITS图像，而右边虚线框内是存储在用户本地的可配置的文件。</p><p>ssos pipeline会自动执行以下步骤：</p><h3 id="运行SExtractor"><a href="#运行SExtractor" class="headerlink" title="运行SExtractor"></a>运行SExtractor</h3><p>首先，SExtractor会依据工作目录的semp文件夹下的配置将输入的图片目录下所有FITS图像逐张进行处理，并将检测到的源编目输出为.cat文件。这一步生成的目录将是后续许多步骤的基础，SCAMP和之后python筛选的过程都是对目录文件进行操作而不会再与原图像进行交互。除了基础FITS图像，如果存在相关的权值图像和遮罩图像，SExtractor也会进行读取和相应的处理。详细过程可参考SExtractor的官方在线文档<sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://sextractor.readthedocs.io/en/latest/">[8]</span></a></sup>.</p><h3 id="运行SCAMP"><a href="#运行SCAMP" class="headerlink" title="运行SCAMP"></a>运行SCAMP</h3><p>接着，SCAMP会根据工作目录&#x2F;semp&#x2F;ssos.scamp的配置在线查询相应的参考目录，并生成full.cat和merged.cat。这是因为实际观测中，同一片天空的不同图像之间可能存在旋转、平移和放缩。SCAMP可以根据参考目录对此进行校准，并将出现在不同图像中的同一个源进行关联。</p><h3 id="太阳系天体筛选"><a href="#太阳系天体筛选" class="headerlink" title="太阳系天体筛选"></a>太阳系天体筛选</h3><p>然后，ssos会依据工作目录&#x2F;default.ssos的配置对源进行筛选，以下筛选均可自行设置关闭或开启：</p><h4 id="探测次数"><a href="#探测次数" class="headerlink" title="探测次数"></a>探测次数</h4><p>通过排除掉出现次数较少的源，可以有效排除掉图像上由宇宙射线和人造卫星等造成的被错误关联起来的无关的源。此外，随着探测次数的增加，可以对源的运动和形状给出更好的测算，从而减少错误识别。</p><h4 id="自行速度和信噪比"><a href="#自行速度和信噪比" class="headerlink" title="自行速度和信噪比"></a>自行速度和信噪比</h4><p>区分太阳系天体和太阳系以外的源主要特征是太阳系天体的自行<sup id="fnref:9" class="footnote-ref"><a href="#fn:9" rel="footnote"><span class="hint--top hint--rounded" aria-label="天体相对太阳系在垂直于观测者视线方向上的角位移或单位时间内角位移量">[9]</span></a></sup>。SCAMP会计算每个源的自行速度，ssos会排除掉信噪比低于设置的PM_SNR参数的源。</p><h4 id="线性运动"><a href="#线性运动" class="headerlink" title="线性运动"></a>线性运动</h4><p>SCAMP在计算源的自行的时候并不会拟合坐标空间中的离群值，因此仍有必要专门对源的运动是否呈线性进行筛选。如果观测时间间隔较长，线性拟合过程很容易给出很高的线性度，但这并不能反映待筛选源在一段间隔较小观测时间内的运动是否呈线性。ssos会根据设定的OUTLIER_THRESHOLD参数检测时域上的离群值，然后将观测进行分组，并对每个子分组进行拟合。如果所有子分组都少于三次探测或未达到要求的线性度，这个源将被排除。</p><h4 id="坏像素"><a href="#坏像素" class="headerlink" title="坏像素"></a>坏像素</h4><p>对于线性漂移的观测模式，CCD上的热像素会表现得像是一个在天空中线性移动的源。不过，坏像素每次都会落在固定的像素位置，而真实的太阳系天体很难如此。二者用SExtrctor计算得到的源的质心都会存在一定弥散，但通过设置一定的阈值，可以有效筛选掉坏像素造成的假源。</p><h4 id="痕迹一致性（默认不启用）"><a href="#痕迹一致性（默认不启用）" class="headerlink" title="痕迹一致性（默认不启用）"></a>痕迹一致性（默认不启用）</h4><p>在相似的观测条件下，同一天体在图像上形成的痕迹的尺寸通常不会产生太大的波动。SExtractor会给出每个源使用椭圆拟合出的半长轴和半短轴，如果尺寸的波动超过了ssos定义的相应的形态参数的不确定性上限，相应的源将会被拒绝。</p><h4 id="靠近亮源"><a href="#靠近亮源" class="headerlink" title="靠近亮源"></a>靠近亮源</h4><p>过于明亮的源的衍射尖峰和鬼影会对前面的筛选过程产生干扰，因此比较稳妥的办法是舍弃那些过于靠近亮源的源。亮源的目录既可以由SCAMP得到，也可以使用用户本地的亮源目录文件。</p><h3 id="可选分析"><a href="#可选分析" class="headerlink" title="可选分析"></a>可选分析</h3><p>ssos执行完前面的步骤，就得到了候选的太阳系天体。<br>除了前述步骤，ssos还提供了其它一些可以在运行pipeline时执行的步骤：</p><h4 id="SkyBot交叉匹配"><a href="#SkyBot交叉匹配" class="headerlink" title="SkyBot交叉匹配"></a>SkyBot交叉匹配</h4><p>SkyBot是IMCCE（天体力学和星历计算研究所）提供的在线星历查询服务<sup id="fnref:10" class="footnote-ref"><a href="#fn:10" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.imcce.fr/services/ephemerides/">[10]</span></a></sup>之一，用于搜索位于天文图像中的太阳系天体。实际执行过程中，SkyBot查询是放在SExtractor源提取过程之前的。在得到候选的太阳系天体后，会再尝试与SkyBot的查询结果进行交叉匹配。如果匹配成功，会在输出的&#x2F;cats&#x2F;ssos*.csv文件中给出相应的天体名称、种类等信息。</p><h4 id="SWarp生成裁切图像"><a href="#SWarp生成裁切图像" class="headerlink" title="SWarp生成裁切图像"></a>SWarp生成裁切图像</h4><p>对于候选的太阳系天体，SWarp可以将源置于中心裁切出指定大小的FITS图像。这些小图像可方便地用于人工检查。</p><h4 id="计算固定孔径光度（默认不启用）"><a href="#计算固定孔径光度（默认不启用）" class="headerlink" title="计算固定孔径光度（默认不启用）"></a>计算固定孔径光度（默认不启用）</h4><p>使用SExtractor的双图像模式进行源检测，将固定孔径的流量和光度添加至输出中。</p><h2 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h2><p>程序运行结束后，工作目录下会产生许多文件。除去SExtractor和SCAMP在运行过程中产生的文件,ssos会还在工作目录生成以下文件夹：</p><ul><li><p>cats&#x2F;</p></li><li><p>checkplots&#x2F;</p></li><li><p>cutouts&#x2F;</p></li><li><p>logs&#x2F;</p></li><li><p>weights&#x2F;</p></li></ul><p>除了自己查看这些文件夹下包含的文件外，ssos还提供了两条额外的命令方便对这些输出文件进行进一步分析：</p><ol><li><p><code>ssos --inspect path/to/working/folder</code>命令可以将工作目录&#x2F;cutouts下的每个源的FITS图像循环播放，形成一个”动图”。用户对其是否属于太阳系天体做出判断后，可以使用键盘方向键对其快速标记，标记结果会保存到工作目录&#x2F;cats&#x2F;ssos*.csv文件的对应条目中。</p></li><li><p><code>ssos --mpc path/to/output/csv</code>命令则可以根据工作目录&#x2F;cats&#x2F;ssos*.csv文件生成MPC格式<sup id="fnref:11" class="footnote-ref"><a href="#fn:11" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://minorplanetcenter.net//iau/info/OpticalObs.html">[11]</span></a></sup>的.txt文件，方便报告给小行星中心。</p></li></ol><hr><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://github.com/maxmahlke/ssos">https://github.com/maxmahlke/ssos</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://ssos.readthedocs.io/en/latest/">https://ssos.readthedocs.io/en/latest/</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://doi.org/https://doi.org/10.1016/j.ascom.2019.100289">Mahlke M, et al. Astronomy and Computing, 2019, 28: 100289.</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://www.astromatic.net/">https://www.astromatic.net</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://github.com/astromatic">https://github.com/astromatic</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span><a href="https://ssos.readthedocs.io/en/latest/setup.html">https://ssos.readthedocs.io/en/latest/setup.html</a><a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span>对于Ubuntu系统，需要系统版本大于等于21.04才可以使用apt安装SCAMP  2.10.0(2020-12-01)版本，而小于此系统版本的Ubuntu安装的最高版本是SCAMP  2.0.4(2014-07-09)，这一版本并不支持GAIA-DR2以及ssos.scamp在ASTREF_CATALOG这一项的注释里列出的其它一些选择，如SDSS-R12、PANSTARRS-1等。<a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span><a href="https://sextractor.readthedocs.io/en/latest/">https://sextractor.readthedocs.io/en/latest/</a><a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:9" class="footnote-text"><span>天体相对太阳系在垂直于观测者视线方向上的角位移或单位时间内角位移量<a href="#fnref:9" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:10" class="footnote-text"><span><a href="https://www.imcce.fr/services/ephemerides/">https://www.imcce.fr/services/ephemerides/</a><a href="#fnref:10" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:11" class="footnote-text"><span><a href="https://minorplanetcenter.net//iau/info/OpticalObs.html">https://minorplanetcenter.net//iau/info/OpticalObs.html</a><a href="#fnref:11" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>ssos</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ssos</tag>
      
      <tag>太阳系天体</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>人工智能概览</title>
    <link href="/2022/06/07/AI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/06/07/AI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="个人碎碎念"><a href="#个人碎碎念" class="headerlink" title="[个人碎碎念]"></a>[个人碎碎念]</h2><p>最近意识到应该去主动拥抱生产力。之前对机器学习、深度学习这些名词的具体区别还不甚了解，所以找了几篇文章先了解一下，顺便做了笔记分享给诸君。</p><p>主体内容都是来自于<a href="https://easyai.tech/">产品经理的人工智能学习库</a>，想更深入了解的可以去原站阅读。</p><h1 id="AI学习笔记"><a href="#AI学习笔记" class="headerlink" title="AI学习笔记"></a>AI学习笔记</h1><blockquote><p>对话的最终目的是为了同步思维。</p></blockquote><blockquote><p>对话是思想从高维向低维的投影。</p></blockquote><p>对话的信息来源：（包含上下文）明文+（基于某一次对话）环境模型+（基于某一个人）世界模型</p><p>目前的深度学习不能实现因果推理，很可能需要开发出其他的新技术。</p><p>现实世界只有一部分问题是数学问题，其中只有部分是AI目前能解决的。</p><p>目前在图像识别等方面效果比较好，而NLP则仍有许多问题不能很好解决。</p><p>NLP&#x3D;NLU+NLG，后者目前是短板。</p><h2 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h2><p>只对现象进行归纳和统计，不推理原因。</p><h3 id="监督学习"><a href="#监督学习" class="headerlink" title="监督学习"></a>监督学习</h3><p>需要大量标记数据</p><p>功能：分类和回归</p><h3 id="非监督学习"><a href="#非监督学习" class="headerlink" title="非监督学习"></a>非监督学习</h3><p>需要大量未标记数据</p><p>功能：聚类和降维</p><p>图像生成模型：生成对抗网络（GAN）</p><h3 id="强化学习"><a href="#强化学习" class="headerlink" title="强化学习"></a>强化学习</h3><p>不需要大量数据，通过不断尝试来训练。</p><p>主要应用场景是游戏，如AlphaGo。</p><p>机器人：平衡控制、推理能力、轨迹跟踪</p><p>强化学习在推荐系统，对话系统，教育培训，⼴告，⾦融等领域也有一些应⽤。</p><h2 id="深度学习"><a href="#深度学习" class="headerlink" title="深度学习"></a>深度学习</h2><p>传统机器学习依靠人工提取特征，而深度学习靠机器自动提取特征。</p><p>深度学习可以说是在传统神经⽹网络基础上的升级，约等于神经⽹络。</p><h3 id="卷积神经网络（CNN）"><a href="#卷积神经网络（CNN）" class="headerlink" title="卷积神经网络（CNN）"></a>卷积神经网络（CNN）</h3><h3 id="循环神经网络（RNN）"><a href="#循环神经网络（RNN）" class="headerlink" title="循环神经网络（RNN）"></a>循环神经网络（RNN）</h3><h3 id="生成对抗网络（GANs）"><a href="#生成对抗网络（GANs）" class="headerlink" title="生成对抗网络（GANs）"></a>生成对抗网络（GANs）</h3><h3 id="深度强化学习（RL）"><a href="#深度强化学习（RL）" class="headerlink" title="深度强化学习（RL）"></a>深度强化学习（RL）</h3><hr><p>【参考资料】：</p><p><a href="https://easyai.tech/">产品经理的人工智能学习库</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=Mzg5NDIwODgzMA==&mid=2247484378&idx=1&sn=1bc51bf52c3c2643d70fcfb91002c36d&source=41#wechat_redirect">为什么现在的人工智能助理都像人工智障？</a></p><p><a href="https://easyai.tech/blog/ai-yuyin-jiaohu-aipm/">人工智障 2 : 你看到的AI与智能无关</a></p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>知识总结</category>
      
    </categories>
    
    
    <tags>
      
      <tag>人工智能</tag>
      
      <tag>机器学习</tag>
      
      <tag>深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>天都论坛 第6期 笔记</title>
    <link href="/2022/05/26/%E5%A4%A9%E9%83%BD%E8%AE%BA%E5%9D%9B%E7%AC%AC6%E6%9C%9F/"/>
    <url>/2022/05/26/%E5%A4%A9%E9%83%BD%E8%AE%BA%E5%9D%9B%E7%AC%AC6%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="天都论坛-第6期-笔记"><a href="#天都论坛-第6期-笔记" class="headerlink" title="天都论坛 第6期 笔记"></a>天都论坛 第6期 笔记</h1><img src="/2022/05/26/%E5%A4%A9%E9%83%BD%E8%AE%BA%E5%9D%9B%E7%AC%AC6%E6%9C%9F/%E5%A4%A9%E9%83%BD%E8%AE%BA%E5%9D%9B6.jpg" class=""><h2 id="地外天体资源利用——可持续太空探索的基础"><a href="#地外天体资源利用——可持续太空探索的基础" class="headerlink" title="地外天体资源利用——可持续太空探索的基础"></a>地外天体资源利用——可持续太空探索的基础</h2><p>姚伟 中国空间技术研究院，南大、西电兼职教授</p><p>月球开发处于战略机遇期</p><p>太空资源：</p><ul><li><p>高远位置资源：人造卫星</p></li><li><p>独特环境资源：太空育种</p></li><li><p>地外天体资源：尚未实现开发利用</p></li></ul><p>地外太空资源利用的意义</p><ul><li><p>减轻质量</p></li><li><p>降低风险增加灵活性</p></li><li><p>解决地面挑战发展太空经济圈</p></li><li><p>……</p></li></ul><h3 id="地外天体资源概况"><a href="#地外天体资源概况" class="headerlink" title="地外天体资源概况"></a>地外天体资源概况</h3><p>宇宙中元素分布</p><p>月球资源，金属矿，独特的克里普岩，……</p><p>月球极区存在丰富的水资源，Benna naturegeoscience（2019）中低纬度也存在少量？</p><p>火星二氧化碳资源、极区冰盖、表面液态高氯酸盐水、地下液态湖、地下冰层</p><h3 id="地外天体资源利用"><a href="#地外天体资源利用" class="headerlink" title="地外天体资源利用"></a>地外天体资源利用</h3><p>识别获取和利用地外天体自然资源和废弃资源，以获得有用的产品或服务</p><p>团队做的研究：</p><ul><li><p>水冰资源开采</p></li><li><p>地外人工光合成</p></li><li><p>星壤储能发电</p></li><li><p>原位制造与建造</p></li></ul><ol><li>水冰资源开采</li></ol><p>NASA’s breakice challenge</p><p>钻取一体光热水资源提取方法</p><p>Li et al.Applied Thermal Engineeing.2020  </p><p>He at al. Icarus,2021.何立臣</p><p>研制了一体化原理样机，模拟月面环境，验证了系统原理可行性</p><ol start="2"><li>地外人工光合成</li></ol><p>NASA MOXIE火星车把CO2转化为O2和CO，未来目标转化为糖类</p><p>冯德强 Catalyst 202？</p><p>规模化二氧化碳还原装置</p><p>月壤可作为人工光合成良催化剂</p><ol start="3"><li>星壤储能发电</li></ol><p>NASA挑战赛</p><p>蓄热块</p><p>研制了太阳能高聚光月壤储能发电原理系统</p><ol start="4"><li>原位制造与建造</li></ol><p>NASA-Contour Crafting</p><p>ESA REGOLIGHT </p><p>目标：高致密度、高抗压强度</p><p>月壤颗粒静电输运技术</p><h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>以上是团队的一些初步尝试。</p><p>同时也要推动地球可持续发展。</p><p>材料很重要</p><p>微重力化学已有的研究较少</p><p>模拟月壤与真实月壤存在区别</p><h2 id="基于太阳和太空低温背景的月球基地能源系统"><a href="#基于太阳和太空低温背景的月球基地能源系统" class="headerlink" title="基于太阳和太空低温背景的月球基地能源系统"></a>基于太阳和太空低温背景的月球基地能源系统</h2><p>裴刚 中科大工程学院</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>LUNARES辅助系统供电耗电最多</p><p>地球上冷热能耗电也很多</p><p>月球基地能耗中冷热耗能会是最主要的部分</p><h3 id="太阳能利用"><a href="#太阳能利用" class="headerlink" title="太阳能利用"></a>太阳能利用</h3><p>太阳热源–月球–太空冷源</p><p>目前太阳能的光电转化和光热转化是最有效率的两种太阳能利用方式</p><p>月球环境太阳能利用具有很多优势：</p><ul><li><p>年度辐射总量高</p></li><li><p>无季节波动性</p></li><li><p>无气象因素导致的不确定性</p></li><li><p>真空环境无对流热损</p></li><li><p>无污染、腐蚀、氧化</p></li><li><p>昼夜周期长，跟踪简单</p></li></ul><p>地月系统是最适于利用太阳能的行星系</p><h3 id="太空冷辐射"><a href="#太空冷辐射" class="headerlink" title="太空冷辐射"></a>太空冷辐射</h3><p>地球辐射效率约为1&#x2F;4黑体辐射</p><ul><li><p>大气阻碍地面辐射</p></li><li><p>大气对流导致冷量损失</p></li></ul><p>光谱选择性吸收和辐射：</p><p>光子晶体辐射体、超低温辐射制冷（Stanford）、……</p><p>全天辐射制冷表面（USTC）</p><p>月球上的空调和冰箱可以不耗电！</p><p>月球环境温度低，热电转化效率较高。</p><h3 id="月球基地能源系统"><a href="#月球基地能源系统" class="headerlink" title="月球基地能源系统"></a>月球基地能源系统</h3><ol><li><p>热电联供：光电&#x2F;热梯级利用系统+月壤储能–&gt;月夜长周期供热</p></li><li><p>太阳热辐射和太空冷辐射的冷热耦合利用：光谱自适应吸收&#x2F;发射体</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>听讲座</category>
      
    </categories>
    
    
    <tags>
      
      <tag>听讲座</tag>
      
      <tag>天文</tag>
      
      <tag>太空探索</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>程序员笑话</title>
    <link href="/2021/03/31/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%AC%91%E8%AF%9D/"/>
    <url>/2021/03/31/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%AC%91%E8%AF%9D/</url>
    
    <content type="html"><![CDATA[<h1 id="程序员笑话"><a href="#程序员笑话" class="headerlink" title="程序员笑话"></a>程序员笑话</h1><blockquote><p>看到一些网络上的程序员笑话后顺手也编了几个，个人觉得最后一个比较好。</p></blockquote><ul><li><p>一名程序猿在路边不停地跺脚，状态极其癫狂。一路人觉得奇怪，走近之后发现程序猿在踩地上的小虫子，于是问其为什么要这样做，程序猿答到：“我在debug。”</p></li><li><p>一程序猿肝完DDL去理发，理发师没有问他要理成什么发型就开动了，于是程序猿问理发师：“你为什么没有问我要理什么发型？”理发师答到：“你这点头发除了理成光头还能是什么？”</p></li><li><p>一群人在山里碰到了蛇，大家都很害怕，只有一个人反而很开心，大家问他问什么开心，他说：“我是一名程序猿，我爱python。”</p></li><li><p>朋友买了三个草莓派，对程序猿说：“这派怎么看起来怪怪的”，程序猿二话不说把就把草莓派扔到了旁边的湖里，由于草莓派是充气包装的，就在湖里浮了起来，程序猿指着漂起来的草莓派对朋友说：“派（π）当然不是3，你得把它弄成float才对。”</p></li><li><p>朋友的手表坏了，秒针总是到处乱窜，但是他没有去找修表匠反而去找了个秃顶了的程序猿，更令大家没想到的是程序猿居然真的把手表修好了，大家问程序猿为什么还会修手表，这位秃顶的程序猿笑了笑，淡淡说道：“这种野指针我见得多了去了。”</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
      <category>段子</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序员</tag>
      
      <tag>笑话</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>沉船</title>
    <link href="/2020/07/31/%E6%B2%89%E8%88%B9/"/>
    <url>/2020/07/31/%E6%B2%89%E8%88%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="沉船"><a href="#沉船" class="headerlink" title="沉船"></a>沉船</h1><p>天空中的飞鱼</p><p>沉落入深海</p><p>爱上塞壬的海员</p><p>真心来换无悔的沉船</p><p>灯塔闪烁出摩尔斯电码</p><p>是我留给你的密语甜言</p><p>是你还未发现</p><p>还是说 我的想念</p><p>这么轻贱</p><p>让你有恃无恐地弄玩</p><p>不过是一场暴风雨</p><p>不过是变咸的海滩</p><p>你的无言</p><p>让世界都灰暗</p><br><p>若得你的陪伴</p><p>海上的寂寞谁愿贪恋</p><p>曾试着走入你心间</p><p>总是浅尝辄止又搁浅</p><p>每次来到你的海岸</p><p>都等不来你的依赖</p><p>叫我怎么勇敢</p><p>便怨自己歌喉不展</p><p>唱不出我的溃败</p><p>唱不出世界惨淡</p><p>是不是命运的罗盘</p><p>使你离我渐远</p><p>我也只能</p><p>像大西洋里的沉船</p><p>一边孤单</p><p>一边腐烂</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
      <category>诗</category>
      
    </categories>
    
    
    <tags>
      
      <tag>现代诗</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>盲人</title>
    <link href="/2020/02/18/%E7%9B%B2%E4%BA%BA/"/>
    <url>/2020/02/18/%E7%9B%B2%E4%BA%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="盲人"><a href="#盲人" class="headerlink" title="盲人"></a>盲人</h1><p>盲人重见了光明</p><p>才发现最真是时间的眼睛</p><p>温柔炽热的心</p><p>唯有时间可以看清</p><br><p>多少次看着谁的脸</p><p>视而不见</p><p>只记得那天</p><p>那金灿灿的下午</p><p>和泛着银色的夜晚</p><br><p>与谁走过的街景</p><p>倒映出最动人的光影</p><p>谁的一言一语</p><p>是盲人的天籁之音</p><br><p>熟悉的人 </p><p>从前一样的色彩</p><p>为何从前不懂</p><p>不懂去爱</p><br><p>从不害怕孤单</p><p>只怕没有回应的海岸</p><p>从勇敢到勇敢</p><p>匆匆多少年</p><br><p>经历过人山人海</p><p>终于回头看见</p><p>谁的那分  可爱</p><p>却  不可去爱</p><p>只把沉默的独白</p><p>在喧嚣中掩埋</p><br><p>夜已阑珊</p><p>繁星未眠</p><p>不见  不恋  不念</p><p>敢不敢？</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
      <category>诗</category>
      
    </categories>
    
    
    <tags>
      
      <tag>现代诗</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>变成一朵云</title>
    <link href="/2019/03/13/%E5%8F%98%E6%88%90%E4%B8%80%E6%9C%B5%E4%BA%91/"/>
    <url>/2019/03/13/%E5%8F%98%E6%88%90%E4%B8%80%E6%9C%B5%E4%BA%91/</url>
    
    <content type="html"><![CDATA[<h1 id="变成一朵云"><a href="#变成一朵云" class="headerlink" title="变成一朵云"></a>变成一朵云</h1><p>我，想变成一朵云。就算我飘一整天，我也不会感到内疚，因为这就是我的职责。</p><p>我，想变成一朵云。人们说我像棉花糖，可人们只能仰望我，却咬不到我。</p><p>我，想变成一朵云。花儿问我：“为什么人们总爱把’朵’放在我们的名字前面呢？”我回答：“因为这个字下半部分写的是你，上半部分画的是我。”</p><p>我，想变成一朵云。我厌倦世事时，我就躲进黑夜里，飘得很高很高，谁也看不见我，只有我和月亮、星星对默……我孤单时，就跑到其他云朵下面，期待有人看看我，向我打招呼。可是在城市里，不知为何，几乎每个人都行色匆匆，很少有人愿意抬头看我。在乡村里，农人劳作累了，总喜欢靠在树上注视我，坐在院子里休憩的老人也喜欢看着我冥想。只是，后来乡村间的人似乎越来越少了。不过令我感动的是，有一次，我看到一个盲人突然朝我微笑，我知道，那一刻，不仅是我看见了他，他一定也看到了我。</p><p>我，想变成一朵云。开心时，我和风儿嬉戏，让他把我变成各种样子，或一口气飞出老远～难过时，我就撒下雨点，让这片天空下的所有人都知道我的忧伤。于是人们纷纷躲到屋檐下或撑起伞来。有几次，我看见有人仰着头淋雨，但他和我不同，他大概不想让别人看到他的泪水吧。还有一次，有个人淋着雨，却似乎很开心。</p><p>我，想变成一朵云。飞行员和我是老朋友。我知道他爱天空中的一切，可我知道他更爱蓝天而不是我。我最爱落到采茶人所在的山间，我从他们明净的眸子里能看到我自己的模样。</p><p>我，想变成一朵云。纯纯粹粹，简简单单，撒下一片阴凉。</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
      <category>散文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>散文</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>雨云下的随想</title>
    <link href="/2018/12/07/%E9%9B%A8%E4%BA%91%E4%B8%8B%E7%9A%84%E9%9A%8F%E6%83%B3/"/>
    <url>/2018/12/07/%E9%9B%A8%E4%BA%91%E4%B8%8B%E7%9A%84%E9%9A%8F%E6%83%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="雨云下的随想"><a href="#雨云下的随想" class="headerlink" title="雨云下的随想"></a>雨云下的随想</h1><p>我常觉得睡眠是造物主对人类的馈赠，一场美梦让你拥有别样的经历，一场噩梦则会让你醒来后庆幸其实生活还不算那么糟。睡眠还能让你忘却，拂去心灵上昨日积攒的世俗的尘埃，在醒来时重获一颗宁静的心。每次从梦中醒来，入眠前的喜怒哀乐都消散在时间的迷雾中，恍若隔世。无论你是被命运捉弄，还是做了颇为得意之事，那都已属于过去的你，而此刻的你正掌握着奔向未来的舵盘。一个小小的决定不经意间可能就彻底改变了人生的轨迹。</p><p>记得《琵琶行》有这样两句“钿头银篦击节碎，血色罗裙翻酒污。今年欢笑复明年，秋月春风等闲度。”读到这里时，我脑海中常会浮现出这样的画面：在一位红裙女子与客人欢笑着推杯换盏间，窗外四季却飞快轮转……我无法想象这是怎样的一种人生，但她当青春不复，“去来江口守空船”与“夜深忽梦少年事”时，泪水中的咸与苦，大概是悔恨吧。</p><p>几百年过去了，世界早已发生了翻天覆地的变化，然而每一个时代都有人重复着琵琶女的故事，不过是改了布景、变了装束、换了面容。一如造化的齿轮，慢慢悠悠，永不停歇。</p><p>在广袤寂寞的宇宙中，地球如同一个热闹非凡的剧场，人类是这一巨大而渺小的宇宙剧场的主角。这是人类文明的史诗，所有人都参演，但没有主角。即使是研究历史、社会、人类的学者，他们自己，也只是人类这一整体中的一个“细胞”。人类的“大生命”不在你我日常的琐碎中，也不在学者或国家首脑的头脑中，而是在千千万如你我一样平凡而奇妙的个体中流淌，无处不在，也无处可寻。或伟大或卑微的生命诞生、存在、逝去，可人间故事永恒地轮回上演。地球像一列没有目的地的星际列车，满载着故事飞驰。</p><p>亿万年来，雨还是雨，每一滴雨仍旧轰轰烈烈地坠落，奔赴轮回的使命。是否会有过去或未来的某人也和我一样漫步在雨中，想着同样的事呢？又或许就在此刻，另一片天空下，也有某人，或在书桌前发呆，或在公园里散步，也想着这些虚无缥缈的事呢？</p><p>——某某人 2018.12 于某朵雨云下的随想</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
      <category>散文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>散文</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>事雨</title>
    <link href="/2018/05/29/%E4%BA%8B%E9%9B%A8/"/>
    <url>/2018/05/29/%E4%BA%8B%E9%9B%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="事雨"><a href="#事雨" class="headerlink" title="事雨"></a>事雨</h1><blockquote><p>自编的一个小诗，想法是上下联每次添一个字，含意也随之层层转折递进。</p></blockquote><p>事，雨。<br>故事，夜雨。<br>小故事，昨夜雨。<br>小城故事，昨夜风雨。<br>小城多故事，昨夜风雨乱。<br>小城几多故事，昨夜风雨曾乱。<br>小城几多故人事，昨夜风雨似曾乱。</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
      <category>诗</category>
      
    </categories>
    
    
    <tags>
      
      <tag>添字诗</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一款python小游戏：HiOnion</title>
    <link href="/2017/07/12/HiOnion/"/>
    <url>/2017/07/12/HiOnion/</url>
    
    <content type="html"><![CDATA[<h1 id="HiOnion"><a href="#HiOnion" class="headerlink" title="HiOnion"></a>HiOnion</h1><p><a href="https://github.com/4DTREE/HiOnion">GitHub repo</a></p><p>I made this game for practice in 2017 when I was in middle school.</p><p>At first, it was a game in windows’s cmd, later I learned <code>Tkinter</code>(A python official GUI package) and I decided to make a GUI version.  </p><p>Hope you like it.</p><img src="/2017/07/12/HiOnion/LEVEL1.png" class="" title="preview1"><img src="/2017/07/12/HiOnion/LEVEL2.png" class="" title="preview2"><h2 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h2><p><code>Python3</code>, no other non-official packages is needed. </p><p>Runs on <strong>Windows, Mac OS, Linux</strong>.</p><h2 id="How-to-start"><a href="#How-to-start" class="headerlink" title="How to start"></a>How to start</h2><p>Double click on <em>HiOnion.pyw</em>.</p><p><strong>Or</strong> </p><p>Open your terminal and type in:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 HiOnion.pyw<br></code></pre></td></tr></table></figure><h2 id="Gamerule"><a href="#Gamerule" class="headerlink" title="Gamerule"></a>Gamerule</h2><p>The game rule is simple: It’s kind like of a mixture of labyrinth&amp;sokoban, but unlike a sokoban, once you start to move, you won’t stop until a wall, or something else stops you.</p><blockquote><p>Use WSAD or Arrows on your keyboard to move.</p></blockquote><ul><li><p><img src="https://github.com/4DTREE/HiOnion/blob/master/assets/wall.gif?raw=true"> [wall] You can stop here safely. </p></li><li><p><img src="https://github.com/4DTREE/HiOnion/blob/master/assets/lava.gif?raw=true"> [lava] Do not try to swim in lava!</p></li><li><p><img src="https://github.com/4DTREE/HiOnion/blob/master/assets/player.gif?raw=true"> [player] You.</p></li><li><p><img src="https://github.com/4DTREE/HiOnion/blob/master/assets/exit.gif?raw=true"> [exit] Reach here and you win.</p></li><li><p><img src="https://github.com/4DTREE/HiOnion/blob/master/assets/wh.gif?raw=true"> [wormhole] Wormholes come out in pair. If you enter one wormhole, you will go out from the other and continue to move in the same direction.</p></li><li><p><img src="https://github.com/4DTREE/HiOnion/blob/master/assets/key.gif?raw=true"> [key] You won’t stop when there is a key in you way, but you can get it if you go pass.</p></li><li><p><img src="https://github.com/4DTREE/HiOnion/blob/master/assets/lock.gif?raw=true"> [lock] Crash into it and a key will be consumed(if you have), then you will find some blocks changed.  </p></li><li><p><img src="https://github.com/4DTREE/HiOnion/blob/master/assets/glass.gif?raw=true"> [glass] Stops you and then it turns into brokenglass.</p></li><li><p><img src="https://github.com/4DTREE/HiOnion/blob/master/assets/brokenglass.gif?raw=true"> [brokenglass] Won’t stop you, just the remnant of a piece of glass.</p></li><li><p><img src="https://github.com/4DTREE/HiOnion/blob/master/assets/slider.gif?raw=true"> [slider] A slider is something you can push step by step.</p></li></ul><h2 id="Levels"><a href="#Levels" class="headerlink" title="Levels"></a>Levels</h2><p>Most levels are designed by myself, but these two levels are designed by my friend <a href="https://github.com/godtoogod">godtoogod · GitHub</a>:</p><ul><li><p>Level 7: Have a try.</p></li><li><p>Level 13: Triple jump?</p></li></ul><p>There are 16 levels in total for now (Training levels excluded) . </p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ul><li><p>Level names could be hints. </p></li><li><p>Some traits demostrated in former levels might be helpful to later levels.</p></li><li><p>You can make you own levels by editing <em>maps.txt</em>.</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>游戏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网站尚在建设中……</title>
    <link href="/1970/01/01/%E7%BD%AE%E9%A1%B6%E5%85%AC%E5%91%8A/"/>
    <url>/1970/01/01/%E7%BD%AE%E9%A1%B6%E5%85%AC%E5%91%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="【置顶公告】"><a href="#【置顶公告】" class="headerlink" title="【置顶公告】"></a>【置顶公告】</h1><p>网站尚在建设中～</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
